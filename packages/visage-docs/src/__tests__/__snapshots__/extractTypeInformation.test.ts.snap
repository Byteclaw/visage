// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`extracting type information extracts information from Accordion component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "AccordionProps",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": false,
      "name": "children",
      "parent": "AccordionProps",
      "type": "ReactElement<AccordionItemProps, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)> | null) | (new (props: any) => Component<...>)>[]",
    },
  ],
}
`;

exports[`extracting type information extracts information from AccordionItem component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": false,
      "name": "children",
      "parent": "AccordionItemProps",
      "type": "string | number | boolean | {} | ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)> | null) | (new (props: any) => Component<...>)> | ... 4 more ... | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "open",
      "parent": "AccordionItemProps",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTriggerClick",
      "parent": "AccordionItemProps",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTriggerKeyDown",
      "parent": "AccordionItemProps",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": false,
      "name": "title",
      "parent": "AccordionItemProps",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "regionId",
      "parent": "AccordionItemProps",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "regionProps",
      "parent": "AccordionItemProps",
      "type": "(Pick<ClassAttributes<HTMLDivElement> & HTMLAttributes<HTMLDivElement> & StyleProps, \\"color\\" | ... 258 more ... | \\"$$variants\\"> & { ...; } & StyleProps) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "triggerId",
      "parent": "AccordionItemProps",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "triggerProps",
      "parent": "AccordionItemProps",
      "type": "(Pick<ClassAttributes<HTMLDivElement> & HTMLAttributes<HTMLDivElement> & StyleProps, \\"color\\" | ... 258 more ... | \\"$$variants\\"> & StyleProps) | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from AutocompleteInput component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "debounceDelay",
      "parent": "AutocompleteInputProps",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "expandOnClick",
      "parent": "AutocompleteInputProps",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "AutocompleteInputProps",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "menu",
      "parent": "AutocompleteInputProps",
      "type": "ComponentClass<AutocompleteInputMenuProps, any> | FunctionComponent<AutocompleteInputMenuProps> | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "options",
      "parent": "AutocompleteInputProps",
      "type": "TValue[] | ((inputValue: string) => Promise<TValue[]>) | undefined",
    },
    Object {
      "documentation": "Set focused option as value on blur",
      "isOptional": true,
      "name": "selectOnBlur",
      "parent": "AutocompleteInputProps",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "SelectorOptions",
      "type": "TValue | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "enhanceReducer",
      "parent": "SelectorOptions",
      "type": "SelectorReducerEnhancer<TValue> | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "SelectorOptions",
      "type": "((option: any) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputValueChange",
      "parent": "SelectorOptions",
      "type": "((inputValue: string) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStateChange",
      "parent": "SelectorOptions",
      "type": "SelectorStateChangeListener<TValue> | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "optionToString",
      "parent": "SelectorOptions",
      "type": "((option: any) => string) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "value",
      "parent": "SelectorOptions",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "valueToString",
      "parent": "SelectorOptions",
      "type": "((option: any) => string) | undefined",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "height",
      "parent": "InputHTMLAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "width",
      "parent": "InputHTMLAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "size",
      "parent": "InputHTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "multiple",
      "parent": "InputHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "disabled",
      "parent": "InputHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "invalid",
      "parent": "TextInputProps",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "form",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "pattern",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLInputElement | null) => void) | RefObject<HTMLInputElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "TextInputProps",
      "type": "ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)> | null) | (new (props: any) => Component<any, any, any>)> | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLInputElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLInputElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "list",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "step",
      "parent": "InputHTMLAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "type",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoFocus",
      "parent": "InputHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accept",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "alt",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoComplete",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "capture",
      "parent": "InputHTMLAttributes",
      "type": "string | boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "checked",
      "parent": "InputHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "crossOrigin",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formAction",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formEncType",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formMethod",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formNoValidate",
      "parent": "InputHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formTarget",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "max",
      "parent": "InputHTMLAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "maxLength",
      "parent": "InputHTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "min",
      "parent": "InputHTMLAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "minLength",
      "parent": "InputHTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "name",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "readOnly",
      "parent": "InputHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "required",
      "parent": "InputHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "src",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "baseProps",
      "parent": "TextInputProps",
      "type": "(Pick<ClassAttributes<HTMLDivElement> & HTMLAttributes<HTMLDivElement> & StyleProps, \\"color\\" | ... 258 more ... | \\"$$variants\\"> & { ...; } & { ...; } & StyleProps) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefixProps",
      "parent": "TextInputProps",
      "type": "(Pick<ClassAttributes<HTMLDivElement> & HTMLAttributes<HTMLDivElement> & StyleProps, \\"color\\" | ... 258 more ... | \\"$$variants\\"> & StyleProps) | undefined",
    },
    Object {
      "documentation": "Elements included between prefix and input",
      "isOptional": true,
      "name": "prefixExtra",
      "parent": "TextInputProps",
      "type": "ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)> | null) | (new (props: any) => Component<any, any, any>)> | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suffix",
      "parent": "TextInputProps",
      "type": "ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)> | null) | (new (props: any) => Component<any, any, any>)> | undefined",
    },
    Object {
      "documentation": "Elements included between input and suffix",
      "isOptional": true,
      "name": "suffixExtra",
      "parent": "TextInputProps",
      "type": "ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)> | null) | (new (props: any) => Component<any, any, any>)> | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suffixProps",
      "parent": "TextInputProps",
      "type": "(Pick<ClassAttributes<HTMLDivElement> & HTMLAttributes<HTMLDivElement> & StyleProps, \\"color\\" | ... 258 more ... | \\"$$variants\\"> & StyleProps) | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from Badge component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "anchorOrigin",
      "parent": "BadgeProps",
      "type": "AnchorOrigin | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": false,
      "name": "children",
      "parent": "BadgeProps",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": false,
      "name": "content",
      "parent": "BadgeProps",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLSpanElement | null) => void) | RefObject<HTMLSpanElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLSpanElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLSpanElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLSpanElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLSpanElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLSpanElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLSpanElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLSpanElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLSpanElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLSpanElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLSpanElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLSpanElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLSpanElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLSpanElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLSpanElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLSpanElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLSpanElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLSpanElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLSpanElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLSpanElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLSpanElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLSpanElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLSpanElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from Banner component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": false,
      "name": "children",
      "parent": "BannerProps",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dismissLabel",
      "parent": "BannerProps",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "icon",
      "parent": "BannerProps",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDismiss",
      "parent": "BannerProps",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "BannerProps",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "flat",
      "parent": undefined,
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLDivElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLDivElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "status",
      "parent": undefined,
      "type": "\\"default\\" | \\"critical\\" | \\"info\\" | \\"success\\" | \\"warning\\" | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from Blockquote component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "cite",
      "parent": "BlockquoteHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLElement | null) => void) | RefObject<HTMLElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from Box component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLDivElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLDivElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from Button component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "disabled",
      "parent": "ButtonHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "form",
      "parent": "ButtonHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLButtonElement | null) => void) | RefObject<HTMLButtonElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLButtonElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLButtonElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "value",
      "parent": "ButtonHTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "type",
      "parent": "ButtonHTMLAttributes",
      "type": "\\"button\\" | \\"reset\\" | \\"submit\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoFocus",
      "parent": "ButtonHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formAction",
      "parent": "ButtonHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formEncType",
      "parent": "ButtonHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formMethod",
      "parent": "ButtonHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formNoValidate",
      "parent": "ButtonHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formTarget",
      "parent": "ButtonHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "name",
      "parent": "ButtonHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "outlined",
      "parent": undefined,
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "monochrome",
      "parent": undefined,
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "variant",
      "parent": undefined,
      "type": "\\"default\\" | \\"primary\\" | \\"danger\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "size",
      "parent": undefined,
      "type": "\\"medium\\" | \\"default\\" | \\"large\\" | \\"small\\" | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from Card component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentProps",
      "parent": "CardProps",
      "type": "(Pick<ClassAttributes<HTMLDivElement> & HTMLAttributes<HTMLDivElement> & StyleProps, \\"color\\" | ... 258 more ... | \\"$$variants\\"> & StyleProps) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "touchableProps",
      "parent": "CardProps",
      "type": "(Pick<ClassAttributes<HTMLDivElement> & HTMLAttributes<HTMLDivElement> & StyleProps, \\"color\\" | ... 258 more ... | \\"$$variants\\"> & StyleProps) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "CardProps",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "touchable",
      "parent": "CardProps",
      "type": "(ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)> | null) | (new (props: any) => Component<any, any, any>)> & false) | (ReactElement<...> & true) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLDivElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLDivElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from Checkbox component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "Hides label visually",
      "isOptional": true,
      "name": "hiddenLabel",
      "parent": "CheckboxProps",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "Sets the checkbox aria-invalid to true and applies visual style",
      "isOptional": true,
      "name": "invalid",
      "parent": "CheckboxProps",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "Label is required to be WAI-ARIA compliant",
      "isOptional": false,
      "name": "label",
      "parent": "CheckboxProps",
      "type": "ReactNode",
    },
    Object {
      "documentation": "Passes props to the label",
      "isOptional": true,
      "name": "labelProps",
      "parent": "CheckboxProps",
      "type": "(Pick<ClassAttributes<HTMLLabelElement> & LabelHTMLAttributes<HTMLLabelElement> & StyleProps, \\"color\\" | ... 260 more ... | \\"htmlFor\\"> & { ...; } & StyleProps) | undefined",
    },
    Object {
      "documentation": "Passes props to the label text",
      "isOptional": true,
      "name": "labelTextProps",
      "parent": "CheckboxProps",
      "type": "(Pick<ClassAttributes<HTMLSpanElement> & HTMLAttributes<HTMLSpanElement> & StyleProps, \\"color\\" | ... 257 more ... | \\"$$variants\\"> & { ...; } & StyleProps) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "CheckboxProps",
      "type": "RefObject<HTMLInputElement> | undefined",
    },
    Object {
      "documentation": "Toggler componet",
      "isOptional": true,
      "name": "toggler",
      "parent": "CheckboxProps",
      "type": "ComponentClass<CheckboxTogglerProps, any> | FunctionComponent<CheckboxTogglerProps> | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "height",
      "parent": "InputHTMLAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "width",
      "parent": "InputHTMLAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "size",
      "parent": "InputHTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "multiple",
      "parent": "InputHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "disabled",
      "parent": "InputHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "form",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "pattern",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "InputHTMLAttributes",
      "type": "((event: ChangeEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLInputElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLInputElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "list",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "step",
      "parent": "InputHTMLAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "value",
      "parent": "InputHTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "type",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoFocus",
      "parent": "InputHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accept",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "alt",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoComplete",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "capture",
      "parent": "InputHTMLAttributes",
      "type": "string | boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "checked",
      "parent": "InputHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "crossOrigin",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formAction",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formEncType",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formMethod",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formNoValidate",
      "parent": "InputHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formTarget",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "max",
      "parent": "InputHTMLAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "maxLength",
      "parent": "InputHTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "min",
      "parent": "InputHTMLAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "minLength",
      "parent": "InputHTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "name",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "readOnly",
      "parent": "InputHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "required",
      "parent": "InputHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "src",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from Chip component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": false,
      "name": "children",
      "parent": "ChipProps",
      "type": "ReactNode",
    },
    Object {
      "documentation": "Called when clicked or chip is focused and Space/Enter is pressed on chip and chip is not readOnly",
      "isOptional": true,
      "name": "onClick",
      "parent": "ChipProps",
      "type": "((e: KeyboardEvent<any> | MouseEvent<any, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "Makes chip deletable

Called when user click on delete element or presses Backspace / Delete",
      "isOptional": true,
      "name": "onDelete",
      "parent": "ChipProps",
      "type": "((e: KeyboardEvent<any> | MouseEvent<any, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "renderDeleter",
      "parent": "ChipProps",
      "type": "((props: { onClick: (event: MouseEvent<any, MouseEvent>) => void; }) => ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)> | null) | (new (props: any) => Component<...>)>) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "small",
      "parent": "ChipProps",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLDivElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLDivElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "outlined",
      "parent": undefined,
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "variant",
      "parent": undefined,
      "type": "\\"default\\" | \\"primary\\" | \\"success\\" | \\"warning\\" | \\"danger\\" | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from Cite component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLElement | null) => void) | RefObject<HTMLElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from CloseButton component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "disabled",
      "parent": "ButtonHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "form",
      "parent": "ButtonHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLButtonElement | null) => void) | RefObject<HTMLButtonElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLButtonElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLButtonElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "value",
      "parent": "ButtonHTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "type",
      "parent": "ButtonHTMLAttributes",
      "type": "\\"button\\" | \\"reset\\" | \\"submit\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoFocus",
      "parent": "ButtonHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formAction",
      "parent": "ButtonHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formEncType",
      "parent": "ButtonHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formMethod",
      "parent": "ButtonHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formNoValidate",
      "parent": "ButtonHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formTarget",
      "parent": "ButtonHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "name",
      "parent": "ButtonHTMLAttributes",
      "type": "string | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from CloseListenerManager component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "Props",
      "type": "ReactNode",
    },
  ],
}
`;

exports[`extracting type information extracts information from Code component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLElement | null) => void) | RefObject<HTMLElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from DataTable component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "summary",
      "parent": "TableHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLTableElement | null) => void) | RefObject<HTMLTableElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLTableElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLTableElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLTableElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "cellPadding",
      "parent": "TableHTMLAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "cellSpacing",
      "parent": "TableHTMLAttributes",
      "type": "string | number | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from DataTableBody component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLTableSectionElement | null) => void) | RefObject<HTMLTableSectionElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLTableSectionElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLTableSectionElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from DataTableColumn component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "abbr",
      "parent": "TdHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLTableDataCellElement | null) => void) | RefObject<HTMLTableDataCellElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableDataCellElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableDataCellElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableDataCellElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableDataCellElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableDataCellElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableDataCellElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableDataCellElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableDataCellElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableDataCellElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableDataCellElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableDataCellElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableDataCellElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableDataCellElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableDataCellElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableDataCellElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableDataCellElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableDataCellElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableDataCellElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableDataCellElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableDataCellElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableDataCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLTableDataCellElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLTableDataCellElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLTableDataCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "align",
      "parent": "TdHTMLAttributes",
      "type": "\\"left\\" | \\"right\\" | \\"center\\" | \\"justify\\" | \\"char\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "colSpan",
      "parent": "TdHTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "headers",
      "parent": "TdHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "rowSpan",
      "parent": "TdHTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "scope",
      "parent": "TdHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "valign",
      "parent": "TdHTMLAttributes",
      "type": "\\"bottom\\" | \\"top\\" | \\"baseline\\" | \\"middle\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "numeric",
      "parent": undefined,
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "total",
      "parent": undefined,
      "type": "boolean | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from DataTableFooter component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLTableSectionElement | null) => void) | RefObject<HTMLTableSectionElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLTableSectionElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLTableSectionElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from DataTableFooterColumn component 1`] = `undefined`;

exports[`extracting type information extracts information from DataTableFooterRow component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLTableRowElement | null) => void) | RefObject<HTMLTableRowElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLTableRowElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLTableRowElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from DataTableHeader component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLTableSectionElement | null) => void) | RefObject<HTMLTableSectionElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableSectionElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableSectionElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLTableSectionElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLTableSectionElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLTableSectionElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from DataTableHeaderColumn component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "abbr",
      "parent": "ThHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLTableHeaderCellElement | null) => void) | RefObject<HTMLTableHeaderCellElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableHeaderCellElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableHeaderCellElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableHeaderCellElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableHeaderCellElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableHeaderCellElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableHeaderCellElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableHeaderCellElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableHeaderCellElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableHeaderCellElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableHeaderCellElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableHeaderCellElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableHeaderCellElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableHeaderCellElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableHeaderCellElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableHeaderCellElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableHeaderCellElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableHeaderCellElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableHeaderCellElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableHeaderCellElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableHeaderCellElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableHeaderCellElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLTableHeaderCellElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLTableHeaderCellElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLTableHeaderCellElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "align",
      "parent": "ThHTMLAttributes",
      "type": "\\"left\\" | \\"right\\" | \\"center\\" | \\"justify\\" | \\"char\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "colSpan",
      "parent": "ThHTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "headers",
      "parent": "ThHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "rowSpan",
      "parent": "ThHTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "scope",
      "parent": "ThHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "numeric",
      "parent": undefined,
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "total",
      "parent": undefined,
      "type": "boolean | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from DataTableHeaderRow component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLTableRowElement | null) => void) | RefObject<HTMLTableRowElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLTableRowElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLTableRowElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from DataTableRow component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLTableRowElement | null) => void) | RefObject<HTMLTableRowElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTableRowElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTableRowElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLTableRowElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLTableRowElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLTableRowElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from DescriptionList component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLDListElement | null) => void) | RefObject<HTMLDListElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDListElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDListElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDListElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDListElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDListElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDListElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDListElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDListElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDListElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDListElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDListElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDListElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDListElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDListElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDListElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDListElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDListElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDListElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDListElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDListElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDListElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLDListElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLDListElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLDListElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from DescriptionListItem component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": false,
      "name": "description",
      "parent": "DescriptionListItemProps",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "DescriptionListItemProps",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suffix",
      "parent": "DescriptionListItemProps",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": false,
      "name": "term",
      "parent": "DescriptionListItemProps",
      "type": "ReactNode",
    },
  ],
}
`;

exports[`extracting type information extracts information from Dialog component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "Dialog's base styles",
      "isOptional": true,
      "name": "baseStyles",
      "parent": "DialogProps",
      "type": "VisageStyleSheet | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DialogProps",
      "type": "ReactNode",
    },
    Object {
      "documentation": "Content wrapper's styles",
      "isOptional": true,
      "name": "contentStyles",
      "parent": "DialogProps",
      "type": "VisageStyleSheet | undefined",
    },
    Object {
      "documentation": "Close button label (default close dialog)",
      "isOptional": true,
      "name": "closeButtonLabel",
      "parent": "DialogProps",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": false,
      "name": "label",
      "parent": "DialogProps",
      "type": "string | ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)> | null) | (new (props: any) => Component<any, any, any>)>",
    },
    Object {
      "documentation": "Unique id of the dialog",
      "isOptional": true,
      "name": "id",
      "parent": "DialogProps",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClose",
      "parent": "DialogProps",
      "type": "(() => void) | undefined",
    },
    Object {
      "documentation": "Accessibility role, use alert dialog if you need user's interaction
Default is dialog (you don't need users immediate action)",
      "isOptional": true,
      "name": "role",
      "parent": "DialogProps",
      "type": "\\"dialog\\" | \\"alertdialog\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "scroll",
      "parent": "DialogProps",
      "type": "\\"content\\" | \\"body\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "secondaryLabel",
      "parent": "DialogProps",
      "type": "string | ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)> | null) | (new (props: any) => Component<any, any, any>)> | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from Divider component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "label",
      "parent": "DividerProps",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "labelProps",
      "parent": "DividerProps",
      "type": "(Pick<ClassAttributes<HTMLDivElement> & HTMLAttributes<HTMLDivElement> & StyleProps, \\"color\\" | ... 258 more ... | \\"$$variants\\"> & { ...; } & StyleProps) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lineProps",
      "parent": "DividerProps",
      "type": "(Pick<ClassAttributes<HTMLDivElement> & HTMLAttributes<HTMLDivElement> & StyleProps, \\"color\\" | ... 258 more ... | \\"$$variants\\"> & { ...; } & StyleProps) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vertical",
      "parent": "DividerProps",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLDivElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLDivElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from Drawer component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "Enables to completely disable backdrop even if Drawer is closable, default is true

Backdrop prevents bubbling onClose event to underlying layers, if you don't use a backdrop
but you don't want to close drawer on click away, you need to call event.preventDefault()
in onClose handler",
      "isOptional": true,
      "name": "backdrop",
      "parent": "DrawerProps",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DrawerProps",
      "type": "ReactNode",
    },
    Object {
      "documentation": "Auto focus element if Drawer is open

If backdrop is enabled also focus trap will use this element to focus if Drawer loses focus",
      "isOptional": true,
      "name": "focusElementRef",
      "parent": "DrawerProps",
      "type": "RefObject<HTMLElement> | undefined",
    },
    Object {
      "documentation": "Render Drawer in Portal, default is true",
      "isOptional": true,
      "name": "inPortal",
      "parent": "DrawerProps",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClose",
      "parent": "DrawerProps",
      "type": "OnCloseHandler | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "open",
      "parent": "DrawerProps",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "Use relative position instead of fixed",
      "isOptional": true,
      "name": "relative",
      "parent": "DrawerProps",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "side",
      "parent": "DrawerProps",
      "type": "DrawerPosition | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLDivElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLDivElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "zIndex",
      "parent": undefined,
      "type": "number | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from FieldSet component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "baseProps",
      "parent": "FieldSetProps",
      "type": "(Pick<ClassAttributes<HTMLFieldSetElement> & FieldsetHTMLAttributes<HTMLFieldSetElement> & StyleProps, \\"color\\" | ... 261 more ... | \\"name\\"> & { ...; } & StyleProps) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": false,
      "name": "children",
      "parent": "FieldSetProps",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "flat",
      "parent": "FieldSetProps",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "headingProps",
      "parent": "FieldSetProps",
      "type": "(ClassAttributes<HTMLHeadingElement> & HTMLAttributes<HTMLHeadingElement> & HeadingProps & StyleProps) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": false,
      "name": "title",
      "parent": "FieldSetProps",
      "type": "string",
    },
  ],
}
`;

exports[`extracting type information extracts information from FileInput component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "invalid",
      "parent": "FileInputProps",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "baseProps",
      "parent": "FileInputProps",
      "type": "(Pick<ClassAttributes<HTMLDivElement> & HTMLAttributes<HTMLDivElement> & StyleProps, \\"color\\" | ... 258 more ... | \\"$$variants\\"> & StyleProps) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "controlProps",
      "parent": "FileInputProps",
      "type": "(Pick<ClassAttributes<HTMLDivElement> & HTMLAttributes<HTMLDivElement> & StyleProps, \\"color\\" | ... 258 more ... | \\"$$variants\\"> & { ...; } & { ...; } & StyleProps) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "label",
      "parent": "FileInputProps",
      "type": "string | ((files: File[], placeholder: string) => string) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "FileInputProps",
      "type": "((files: File[]) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "height",
      "parent": "InputHTMLAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "width",
      "parent": "InputHTMLAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "size",
      "parent": "InputHTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "multiple",
      "parent": "InputHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "disabled",
      "parent": "InputHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "form",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "pattern",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLInputElement | null) => void) | RefObject<HTMLInputElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLInputElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLInputElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "list",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "step",
      "parent": "InputHTMLAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "value",
      "parent": "InputHTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "type",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoFocus",
      "parent": "InputHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accept",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "alt",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoComplete",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "capture",
      "parent": "InputHTMLAttributes",
      "type": "string | boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "checked",
      "parent": "InputHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "crossOrigin",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formAction",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formEncType",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formMethod",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formNoValidate",
      "parent": "InputHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formTarget",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "max",
      "parent": "InputHTMLAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "maxLength",
      "parent": "InputHTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "min",
      "parent": "InputHTMLAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "minLength",
      "parent": "InputHTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "name",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "readOnly",
      "parent": "InputHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "required",
      "parent": "InputHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "src",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from Flex component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLDivElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLDivElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from FormField component 1`] = `
Object {
  "properties": Array [],
}
`;

exports[`extracting type information extracts information from Grid component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLDivElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLDivElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from Group component 1`] = `undefined`;

exports[`extracting type information extracts information from Header component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLDivElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLDivElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from Heading component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLHeadingElement | null) => void) | RefObject<HTMLHeadingElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLHeadingElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLHeadingElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLHeadingElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLHeadingElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLHeadingElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLHeadingElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLHeadingElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLHeadingElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLHeadingElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLHeadingElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLHeadingElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLHeadingElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLHeadingElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLHeadingElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLHeadingElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLHeadingElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLHeadingElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLHeadingElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLHeadingElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLHeadingElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLHeadingElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLHeadingElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "level",
      "parent": "HeadingProps",
      "type": "2 | 1 | 6 | 5 | 4 | 3 | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from HeadingSkeleton component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLHeadingElement | null) => void) | RefObject<HTMLHeadingElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLHeadingElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLHeadingElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLHeadingElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLHeadingElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLHeadingElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLHeadingElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLHeadingElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLHeadingElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLHeadingElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLHeadingElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLHeadingElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLHeadingElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLHeadingElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLHeadingElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLHeadingElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLHeadingElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLHeadingElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLHeadingElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLHeadingElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLHeadingElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLHeadingElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLHeadingElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLHeadingElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLHeadingElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "level",
      "parent": "HeadingProps",
      "type": "2 | 1 | 6 | 5 | 4 | 3 | undefined",
    },
    Object {
      "documentation": "Defines a mask for words. For example [6, 3] means 2 words with length 6 and 3 characters. Default value is [6]",
      "isOptional": true,
      "name": "mask",
      "parent": "HeadingSkeletonProps",
      "type": "number[] | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from IconButton component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": false,
      "name": "icon",
      "parent": "IconButtonProps",
      "type": "ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)> | null) | (new (props: any) => Component<any, any, any>)> | ComponentClass<...> | FunctionComponent<...>",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "iconProps",
      "parent": "IconButtonProps",
      "type": "({ icon: ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)> | null) | (new (props: any) => Component<any, any, any>) | ReactElement<...>; iconProps?: SVGProps<...> | undefined; } & Pick<...> & StyleProps) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": false,
      "name": "label",
      "parent": "IconButtonProps",
      "type": "string",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "IconButtonProps",
      "type": "((instance: HTMLButtonElement | null) => void) | RefObject<HTMLButtonElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "disabled",
      "parent": undefined,
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "form",
      "parent": "ButtonHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLButtonElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLButtonElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "value",
      "parent": "ButtonHTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "type",
      "parent": "ButtonHTMLAttributes",
      "type": "\\"button\\" | \\"reset\\" | \\"submit\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoFocus",
      "parent": "ButtonHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formAction",
      "parent": "ButtonHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formEncType",
      "parent": "ButtonHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formMethod",
      "parent": "ButtonHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formNoValidate",
      "parent": "ButtonHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formTarget",
      "parent": "ButtonHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "name",
      "parent": "ButtonHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "variant",
      "parent": undefined,
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "monochromatic",
      "parent": undefined,
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "stroked",
      "parent": undefined,
      "type": "boolean | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from Image component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "alt",
      "parent": "ImageProps",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "aspectRatio",
      "parent": "ImageProps",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "containerProps",
      "parent": "ImageProps",
      "type": "(Pick<ClassAttributes<HTMLDivElement> & HTMLAttributes<HTMLDivElement> & StyleProps, \\"color\\" | ... 258 more ... | \\"$$variants\\"> & StyleProps) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "imgProps",
      "parent": "ImageProps",
      "type": "(Pick<ClassAttributes<HTMLImageElement> & ImgHTMLAttributes<HTMLImageElement> & StyleProps, \\"color\\" | ... 269 more ... | \\"useMap\\"> & StyleProps) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "height",
      "parent": "ImageProps",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "src",
      "parent": "ImageProps",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "width",
      "parent": "ImageProps",
      "type": "number | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from InlineError component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLDivElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLDivElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from KeyboardKey component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLElement | null) => void) | RefObject<HTMLElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from Label component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "required",
      "parent": "LabelProps",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "Title used to describe what asterisk means, default is Required",
      "isOptional": true,
      "name": "requiredTitle",
      "parent": "LabelProps",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "form",
      "parent": "LabelHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLLabelElement | null) => void) | RefObject<HTMLLabelElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLabelElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLabelElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLabelElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLabelElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLabelElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLabelElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLabelElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLabelElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLabelElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLabelElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLabelElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLabelElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLabelElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLabelElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLabelElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLabelElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLabelElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLabelElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLabelElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLabelElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLabelElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLLabelElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLLabelElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLLabelElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "htmlFor",
      "parent": "LabelHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": undefined,
      "type": "boolean | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from LayerManager component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": false,
      "name": "children",
      "parent": "LayerManagerProps",
      "type": "ReactNode",
    },
    Object {
      "documentation": "Increases current zIndex by N (default is 100)",
      "isOptional": true,
      "name": "increaseBy",
      "parent": "LayerManagerProps",
      "type": "number | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from Layout component 1`] = `undefined`;

exports[`extracting type information extracts information from Link component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLAnchorElement | null) => void) | RefObject<HTMLAnchorElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLAnchorElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLAnchorElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLAnchorElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLAnchorElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLAnchorElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLAnchorElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLAnchorElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLAnchorElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLAnchorElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLAnchorElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLAnchorElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLAnchorElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLAnchorElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLAnchorElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLAnchorElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLAnchorElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLAnchorElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLAnchorElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLAnchorElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLAnchorElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLAnchorElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLAnchorElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLAnchorElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLAnchorElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "download",
      "parent": "AnchorHTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "href",
      "parent": "AnchorHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hrefLang",
      "parent": "AnchorHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "media",
      "parent": "AnchorHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ping",
      "parent": "AnchorHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "rel",
      "parent": "AnchorHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "target",
      "parent": "AnchorHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "type",
      "parent": "AnchorHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "referrerPolicy",
      "parent": "AnchorHTMLAttributes",
      "type": "string | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from List component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "container",
      "parent": "ListProps",
      "type": "ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)> | null) | (new (props: any) => Component<any, any, any>)> | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "heading",
      "parent": "ListProps",
      "type": "ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)> | null) | (new (props: any) => Component<any, any, any>)> | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemsContainer",
      "parent": "ListProps",
      "type": "ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)> | null) | (new (props: any) => Component<any, any, any>)> | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLElement | null) => void) | RefObject<HTMLElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from ListItem component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLLIElement | null) => void) | RefObject<HTMLLIElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLIElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLIElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLIElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLIElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLIElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLIElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLIElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLIElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLIElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLIElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLIElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLIElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLIElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLIElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLIElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLIElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLIElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLIElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLIElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLIElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLLIElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLLIElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "value",
      "parent": "LiHTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "active",
      "parent": undefined,
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "button",
      "parent": undefined,
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "gutters",
      "parent": undefined,
      "type": "boolean | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from Loading component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "baseProps",
      "parent": undefined,
      "type": "(Pick<ClassAttributes<HTMLDivElement> & HTMLAttributes<HTMLDivElement> & StyleProps, \\"color\\" | ... 258 more ... | \\"$$variants\\"> & { ...; } & StyleProps) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "indeterminate",
      "parent": undefined,
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "progressProps",
      "parent": undefined,
      "type": "(Pick<ClassAttributes<HTMLDivElement> & HTMLAttributes<HTMLDivElement> & StyleProps, \\"color\\" | ... 258 more ... | \\"$$variants\\"> & { ...; } & StyleProps) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "value",
      "parent": undefined,
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "valueText",
      "parent": undefined,
      "type": "string | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from Loading component 2`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "baseProps",
      "parent": undefined,
      "type": "(Pick<ClassAttributes<HTMLDivElement> & HTMLAttributes<HTMLDivElement> & StyleProps, \\"color\\" | ... 258 more ... | \\"$$variants\\"> & { ...; } & StyleProps) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "indeterminate",
      "parent": undefined,
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "progressProps",
      "parent": undefined,
      "type": "(Pick<ClassAttributes<HTMLDivElement> & HTMLAttributes<HTMLDivElement> & StyleProps, \\"color\\" | ... 258 more ... | \\"$$variants\\"> & { ...; } & StyleProps) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "value",
      "parent": undefined,
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "valueText",
      "parent": undefined,
      "type": "string | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from Menu component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "anchor",
      "parent": "MenuProps",
      "type": "RefObject<HTMLElement> | null | undefined",
    },
    Object {
      "documentation": "A ref to base HTML element",
      "isOptional": true,
      "name": "baseRef",
      "parent": "MenuProps",
      "type": "RefObject<HTMLDivElement> | undefined",
    },
    Object {
      "documentation": "Use only if you are managing focus outside of this component",
      "isOptional": true,
      "name": "disableAutoFocusItem",
      "parent": "MenuProps",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "Disable all default event handlers on menu?

The purpose of this props is for example if you want to use Menu as companion to TextInput",
      "isOptional": true,
      "name": "disableEvents",
      "parent": "MenuProps",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "Make menu as long as anchor element?",
      "isOptional": true,
      "name": "keepAnchorWidth",
      "parent": "MenuProps",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClose",
      "parent": "MenuProps",
      "type": "(() => void) | undefined",
    },
    Object {
      "documentation": "Is menu open?",
      "isOptional": true,
      "name": "open",
      "parent": "MenuProps",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "Prioritized array of Placement to Anchor origin tuples",
      "isOptional": true,
      "name": "placement",
      "parent": "MenuProps",
      "type": "PlacementWithAnchorOrigin[] | undefined",
    },
    Object {
      "documentation": "Props that will be passed to underlying Popover component",
      "isOptional": true,
      "name": "popoverProps",
      "parent": "MenuProps",
      "type": "OmittableProps<PopoverProps & StyleProps> | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLElement | null) => void) | RefObject<HTMLElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "heading",
      "parent": "ListProps",
      "type": "ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)> | null) | (new (props: any) => Component<any, any, any>)> | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "container",
      "parent": "ListProps",
      "type": "ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)> | null) | (new (props: any) => Component<any, any, any>)> | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemsContainer",
      "parent": "ListProps",
      "type": "ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)> | null) | (new (props: any) => Component<any, any, any>)> | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from MenuItem component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "button",
      "parent": undefined,
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "active",
      "parent": undefined,
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLLIElement | null) => void) | RefObject<HTMLLIElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLIElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLIElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLIElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLIElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLIElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLIElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLIElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLIElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLIElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLIElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLIElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLIElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLIElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLIElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLIElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLIElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLIElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLIElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLIElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLLIElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLLIElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLLIElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLLIElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLLIElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "gutters",
      "parent": undefined,
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "value",
      "parent": "LiHTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from Message component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "Makes message dismissable

Called when user click on delete element",
      "isOptional": true,
      "name": "onDelete",
      "parent": "MessageProps",
      "type": "((e: KeyboardEvent<any> | MouseEvent<any, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "renderDeleter",
      "parent": "MessageProps",
      "type": "((props: { onClick: (event: MouseEvent<any, MouseEvent>) => void; }) => ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)> | null) | (new (props: any) => Component<...>)>) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLDivElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLDivElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "variant",
      "parent": undefined,
      "type": "\\"default\\" | \\"info\\" | \\"success\\" | \\"warning\\" | \\"danger\\" | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from Modal component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "Backdrop enables visible background overlay",
      "isOptional": true,
      "name": "backdrop",
      "parent": "ModalProps",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "Ref object to content, basically you want to render a div inside a Modal
so contentRef should be a ref to the div",
      "isOptional": true,
      "name": "contentRef",
      "parent": "ModalProps",
      "type": "MutableRefObject<HTMLElement | null> | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "disableOnClickAwayClose",
      "parent": "ModalProps",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "disableOnEscapeClose",
      "parent": "ModalProps",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "ModalProps",
      "type": "ReactNode",
    },
    Object {
      "documentation": "Render modal content as position: fixed",
      "isOptional": true,
      "name": "fixed",
      "parent": "ModalProps",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "Unique id of the modal",
      "isOptional": true,
      "name": "id",
      "parent": "ModalProps",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClose",
      "parent": "ModalProps",
      "type": "(() => void) | undefined",
    },
    Object {
      "documentation": "When content overflows screen height should we scroll the modal content?",
      "isOptional": true,
      "name": "scrollable",
      "parent": "ModalProps",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "Accessibility role, use alert dialog if you need user's interaction
Default is dialog (you don't need users immediate action)",
      "isOptional": false,
      "name": "open",
      "parent": "ModalProps",
      "type": "boolean",
    },
    Object {
      "documentation": "This element will be focused on mount and will receive focus from focus trap",
      "isOptional": true,
      "name": "focusElementRef",
      "parent": "ModalProps",
      "type": "MutableRefObject<HTMLElement | null> | undefined",
    },
    Object {
      "documentation": "Extra elements that should not propagate onClose when click away is enabled

This prop is immutable so make sure you don't use a new array because only first one is being used",
      "isOptional": true,
      "name": "preventCloseRefs",
      "parent": "ModalProps",
      "type": "MutableRefObject<HTMLElement | null>[] | undefined",
    },
    Object {
      "documentation": "Should we allow to scroll document body?",
      "isOptional": true,
      "name": "unlockBodyScroll",
      "parent": "ModalProps",
      "type": "boolean | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from Pagination component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLElement | null) => void) | RefObject<HTMLElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from PaginationNextPageButton component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "size",
      "parent": undefined,
      "type": "\\"medium\\" | \\"default\\" | \\"large\\" | \\"small\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "disabled",
      "parent": "ButtonHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "form",
      "parent": "ButtonHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLButtonElement | null) => void) | RefObject<HTMLButtonElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLButtonElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLButtonElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "value",
      "parent": "ButtonHTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "type",
      "parent": "ButtonHTMLAttributes",
      "type": "\\"button\\" | \\"reset\\" | \\"submit\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoFocus",
      "parent": "ButtonHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formAction",
      "parent": "ButtonHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formEncType",
      "parent": "ButtonHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formMethod",
      "parent": "ButtonHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formNoValidate",
      "parent": "ButtonHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formTarget",
      "parent": "ButtonHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "name",
      "parent": "ButtonHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "outlined",
      "parent": undefined,
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "monochrome",
      "parent": undefined,
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "variant",
      "parent": undefined,
      "type": "\\"default\\" | \\"primary\\" | \\"danger\\" | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from PaginationPreviousPageButton component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "size",
      "parent": undefined,
      "type": "\\"medium\\" | \\"default\\" | \\"large\\" | \\"small\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "disabled",
      "parent": "ButtonHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "form",
      "parent": "ButtonHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLButtonElement | null) => void) | RefObject<HTMLButtonElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLButtonElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLButtonElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLButtonElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLButtonElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLButtonElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "value",
      "parent": "ButtonHTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "type",
      "parent": "ButtonHTMLAttributes",
      "type": "\\"button\\" | \\"reset\\" | \\"submit\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoFocus",
      "parent": "ButtonHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formAction",
      "parent": "ButtonHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formEncType",
      "parent": "ButtonHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formMethod",
      "parent": "ButtonHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formNoValidate",
      "parent": "ButtonHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formTarget",
      "parent": "ButtonHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "name",
      "parent": "ButtonHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "outlined",
      "parent": undefined,
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "monochrome",
      "parent": undefined,
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "variant",
      "parent": undefined,
      "type": "\\"default\\" | \\"primary\\" | \\"danger\\" | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from Paragraph component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLParagraphElement | null) => void) | RefObject<HTMLParagraphElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLParagraphElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLParagraphElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLParagraphElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLParagraphElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLParagraphElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLParagraphElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLParagraphElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLParagraphElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLParagraphElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLParagraphElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLParagraphElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLParagraphElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLParagraphElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLParagraphElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLParagraphElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLParagraphElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLParagraphElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLParagraphElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLParagraphElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLParagraphElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLParagraphElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLParagraphElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLParagraphElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLParagraphElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from ParagraphSkeleton component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lines",
      "parent": "ParagraphSkeletonProps",
      "type": "number | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from Portal component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": false,
      "name": "children",
      "parent": "PortalProps",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "containerId",
      "parent": "PortalProps",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "removeOnUnmount",
      "parent": "PortalProps",
      "type": "boolean | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from ProgressBar component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "baseProps",
      "parent": undefined,
      "type": "(Pick<ClassAttributes<HTMLDivElement> & HTMLAttributes<HTMLDivElement> & StyleProps, \\"color\\" | ... 258 more ... | \\"$$variants\\"> & StyleProps) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "progressProps",
      "parent": undefined,
      "type": "(Pick<ClassAttributes<HTMLDivElement> & HTMLAttributes<HTMLDivElement> & StyleProps, \\"color\\" | ... 258 more ... | \\"$$variants\\"> & StyleProps) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "max",
      "parent": undefined,
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": false,
      "name": "value",
      "parent": undefined,
      "type": "number",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "valueText",
      "parent": undefined,
      "type": "string | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from Quote component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "cite",
      "parent": "QuoteHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLQuoteElement | null) => void) | RefObject<HTMLQuoteElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLQuoteElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLQuoteElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLQuoteElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLQuoteElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLQuoteElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLQuoteElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLQuoteElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLQuoteElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLQuoteElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLQuoteElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLQuoteElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLQuoteElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLQuoteElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLQuoteElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLQuoteElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLQuoteElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLQuoteElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLQuoteElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLQuoteElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLQuoteElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLQuoteElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLQuoteElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLQuoteElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLQuoteElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from Radio component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "Hides label visually",
      "isOptional": true,
      "name": "hiddenLabel",
      "parent": "RadioProps",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "Sets the checkbox aria-invalid to true and applies visual style",
      "isOptional": true,
      "name": "invalid",
      "parent": "RadioProps",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "Label is required to be WAI-ARIA compliant",
      "isOptional": false,
      "name": "label",
      "parent": "RadioProps",
      "type": "ReactNode",
    },
    Object {
      "documentation": "Passes props to the label",
      "isOptional": true,
      "name": "labelProps",
      "parent": "RadioProps",
      "type": "(Pick<ClassAttributes<HTMLLabelElement> & LabelHTMLAttributes<HTMLLabelElement> & StyleProps, \\"color\\" | ... 260 more ... | \\"htmlFor\\"> & { ...; } & StyleProps) | undefined",
    },
    Object {
      "documentation": "Passes props to the label text",
      "isOptional": true,
      "name": "labelTextProps",
      "parent": "RadioProps",
      "type": "(Pick<ClassAttributes<HTMLSpanElement> & HTMLAttributes<HTMLSpanElement> & StyleProps, \\"color\\" | ... 257 more ... | \\"$$variants\\"> & { ...; } & StyleProps) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "RadioProps",
      "type": "RefObject<HTMLInputElement> | undefined",
    },
    Object {
      "documentation": "Toggler component",
      "isOptional": true,
      "name": "toggler",
      "parent": "RadioProps",
      "type": "ComponentClass<RadioTogglerProps, any> | FunctionComponent<RadioTogglerProps> | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "height",
      "parent": "InputHTMLAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "width",
      "parent": "InputHTMLAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "size",
      "parent": "InputHTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "multiple",
      "parent": "InputHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "disabled",
      "parent": "InputHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "form",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "pattern",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "InputHTMLAttributes",
      "type": "((event: ChangeEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLInputElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLInputElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "list",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "step",
      "parent": "InputHTMLAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "value",
      "parent": "InputHTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "type",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoFocus",
      "parent": "InputHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accept",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "alt",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoComplete",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "capture",
      "parent": "InputHTMLAttributes",
      "type": "string | boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "checked",
      "parent": "InputHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "crossOrigin",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formAction",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formEncType",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formMethod",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formNoValidate",
      "parent": "InputHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formTarget",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "max",
      "parent": "InputHTMLAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "maxLength",
      "parent": "InputHTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "min",
      "parent": "InputHTMLAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "minLength",
      "parent": "InputHTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "name",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "readOnly",
      "parent": "InputHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "required",
      "parent": "InputHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "src",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from Select component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "debounceDelay",
      "parent": "SelectProps",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "SelectProps",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "options",
      "parent": "SelectProps",
      "type": "TValue[] | ((inputValue: string) => Promise<TValue[]>) | undefined",
    },
    Object {
      "documentation": "Select menu component",
      "isOptional": true,
      "name": "menu",
      "parent": "SelectProps",
      "type": "ComponentClass<SelectMenuProps, any> | FunctionComponent<SelectMenuProps> | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "searchable",
      "parent": "SelectProps",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "Toggler component",
      "isOptional": true,
      "name": "toggler",
      "parent": "SelectProps",
      "type": "ComponentClass<SelectTogglerProps, any> | FunctionComponent<SelectTogglerProps> | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "SelectorOptions",
      "type": "TValue | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "enhanceReducer",
      "parent": "SelectorOptions",
      "type": "SelectorReducerEnhancer<TValue> | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "SelectorOptions",
      "type": "((option: any) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputValueChange",
      "parent": "SelectorOptions",
      "type": "((inputValue: string) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStateChange",
      "parent": "SelectorOptions",
      "type": "SelectorStateChangeListener<TValue> | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "optionToString",
      "parent": "SelectorOptions",
      "type": "((option: any) => string) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "value",
      "parent": "SelectorOptions",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "valueToString",
      "parent": "SelectorOptions",
      "type": "((option: any) => string) | undefined",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "height",
      "parent": "InputHTMLAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "width",
      "parent": "InputHTMLAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "size",
      "parent": "InputHTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "multiple",
      "parent": "InputHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "disabled",
      "parent": "InputHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "invalid",
      "parent": "TextInputProps",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "form",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "pattern",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLInputElement | null) => void) | RefObject<HTMLInputElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "TextInputProps",
      "type": "ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)> | null) | (new (props: any) => Component<any, any, any>)> | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLInputElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLInputElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "list",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "step",
      "parent": "InputHTMLAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "type",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoFocus",
      "parent": "InputHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accept",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "alt",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoComplete",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "capture",
      "parent": "InputHTMLAttributes",
      "type": "string | boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "checked",
      "parent": "InputHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "crossOrigin",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formAction",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formEncType",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formMethod",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formNoValidate",
      "parent": "InputHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formTarget",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "max",
      "parent": "InputHTMLAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "maxLength",
      "parent": "InputHTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "min",
      "parent": "InputHTMLAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "minLength",
      "parent": "InputHTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "name",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "readOnly",
      "parent": "InputHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "required",
      "parent": "InputHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "src",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "baseProps",
      "parent": "TextInputProps",
      "type": "(Pick<ClassAttributes<HTMLDivElement> & HTMLAttributes<HTMLDivElement> & StyleProps, \\"color\\" | ... 258 more ... | \\"$$variants\\"> & { ...; } & { ...; } & StyleProps) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefixProps",
      "parent": "TextInputProps",
      "type": "(Pick<ClassAttributes<HTMLDivElement> & HTMLAttributes<HTMLDivElement> & StyleProps, \\"color\\" | ... 258 more ... | \\"$$variants\\"> & StyleProps) | undefined",
    },
    Object {
      "documentation": "Elements included between prefix and input",
      "isOptional": true,
      "name": "prefixExtra",
      "parent": "TextInputProps",
      "type": "ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)> | null) | (new (props: any) => Component<any, any, any>)> | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suffix",
      "parent": "TextInputProps",
      "type": "ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)> | null) | (new (props: any) => Component<any, any, any>)> | undefined",
    },
    Object {
      "documentation": "Elements included between input and suffix",
      "isOptional": true,
      "name": "suffixExtra",
      "parent": "TextInputProps",
      "type": "ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)> | null) | (new (props: any) => Component<any, any, any>)> | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suffixProps",
      "parent": "TextInputProps",
      "type": "(Pick<ClassAttributes<HTMLDivElement> & HTMLAttributes<HTMLDivElement> & StyleProps, \\"color\\" | ... 258 more ... | \\"$$variants\\"> & StyleProps) | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from SkeletonSentence component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "Mask of words of different lengths, e.g. [6,2,7]",
      "isOptional": true,
      "name": "mask",
      "parent": "SkeletonSentenceProps",
      "type": "number[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLDivElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLDivElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from Slider component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "allowedValues",
      "parent": "SliderProps",
      "type": "number[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": false,
      "name": "colors",
      "parent": "SliderProps",
      "type": "string[]",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "disabled",
      "parent": "SliderProps",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "max",
      "parent": "SliderProps",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "min",
      "parent": "SliderProps",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "SliderProps",
      "type": "((values: number[]) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFinalChange",
      "parent": "SliderProps",
      "type": "((values: number[]) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "readOnly",
      "parent": "SliderProps",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "step",
      "parent": "SliderProps",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": false,
      "name": "values",
      "parent": "SliderProps",
      "type": "number[]",
    },
  ],
}
`;

exports[`extracting type information extracts information from SpinButton component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | (string & ((instance: HTMLDivElement | null) => void)) | ... 4 more ... | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "(string & TValue) | (number & TValue) | (string[] & TValue) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "(((event: FormEvent<HTMLDivElement>) => void) & ((value: TValue) => void)) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLDivElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLDivElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "baseProps",
      "parent": "SpinButtonProps",
      "type": "(Pick<ClassAttributes<HTMLDivElement> & HTMLAttributes<HTMLDivElement> & StyleProps, \\"color\\" | ... 258 more ... | \\"$$variants\\"> & { ...; } & StyleProps) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "disabled",
      "parent": "SpinButtonProps",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "Label used as aria-label for assistive technology",
      "isOptional": true,
      "name": "label",
      "parent": "SpinButtonProps",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Minimum value (if known) as aria-valuemin for assistive technology",
      "isOptional": true,
      "name": "min",
      "parent": "SpinButtonProps",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Maximum value (if known) as aria-valuemax for assistive technology",
      "isOptional": true,
      "name": "max",
      "parent": "SpinButtonProps",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "nextButtonProps",
      "parent": "SpinButtonProps",
      "type": "(Pick<ClassAttributes<HTMLButtonElement> & ButtonHTMLAttributes<HTMLButtonElement> & StyleProps, \\"color\\" | ... 269 more ... | \\"name\\"> & StyleProps) | undefined",
    },
    Object {
      "documentation": "Renders a current, previous and next value",
      "isOptional": true,
      "name": "renderValue",
      "parent": "SpinButtonProps",
      "type": "SpinnerValueRenderer<TValue> | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "readOnly",
      "parent": "SpinButtonProps",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "previousButtonProps",
      "parent": "SpinButtonProps",
      "type": "(Pick<ClassAttributes<HTMLButtonElement> & ButtonHTMLAttributes<HTMLButtonElement> & StyleProps, \\"color\\" | ... 269 more ... | \\"name\\"> & StyleProps) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "value",
      "parent": "SpinButtonProps",
      "type": "TValue | undefined",
    },
    Object {
      "documentation": "Used as aria-valuetext for user friendly text for assistive technology

It can be either provided from outside or generated by a function that receives
current value",
      "isOptional": true,
      "name": "valueText",
      "parent": "SpinButtonProps",
      "type": "string | ((value: TValue) => string) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": false,
      "name": "values",
      "parent": "SpinButtonProps",
      "type": "TValue[]",
    },
  ],
}
`;

exports[`extracting type information extracts information from Spinner component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLDivElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLDivElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from Subscript component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLElement | null) => void) | RefObject<HTMLElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from Superscript component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLElement | null) => void) | RefObject<HTMLElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from Svg component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "string",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "fontWeight",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "clipPath",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "cursor",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "direction",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "display",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "filter",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "fontFamily",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "fontSize",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "fontSizeAdjust",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "fontStretch",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "fontStyle",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "fontVariant",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "height",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "imageRendering",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "letterSpacing",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "opacity",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "order",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "paintOrder",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "pointerEvents",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "rotate",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "scale",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "textRendering",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "transform",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unicodeBidi",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "visibility",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "width",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "wordSpacing",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "writingMode",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "mask",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "offset",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "overflow",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "textDecoration",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "clip",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "alignmentBaseline",
      "parent": "SVGAttributes",
      "type": "\\"inherit\\" | \\"baseline\\" | \\"auto\\" | \\"middle\\" | \\"after-edge\\" | \\"alphabetic\\" | \\"before-edge\\" | \\"central\\" | \\"hanging\\" | \\"ideographic\\" | \\"mathematical\\" | \\"text-after-edge\\" | \\"text-before-edge\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "baselineShift",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "clipRule",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "colorInterpolation",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "colorRendering",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dominantBaseline",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "fill",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "fillOpacity",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "fillRule",
      "parent": "SVGAttributes",
      "type": "\\"inherit\\" | \\"evenodd\\" | \\"nonzero\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "floodColor",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "floodOpacity",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "glyphOrientationVertical",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lightingColor",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "markerEnd",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "markerMid",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "markerStart",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "shapeRendering",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "stopColor",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "stopOpacity",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "stroke",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "strokeDasharray",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "strokeDashoffset",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "strokeLinecap",
      "parent": "SVGAttributes",
      "type": "\\"inherit\\" | \\"round\\" | \\"butt\\" | \\"square\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "strokeLinejoin",
      "parent": "SVGAttributes",
      "type": "\\"inherit\\" | \\"round\\" | \\"bevel\\" | \\"miter\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "strokeMiterlimit",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "strokeOpacity",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "strokeWidth",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "textAnchor",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vectorEffect",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "end",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "local",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "SVGAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "x",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "y",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "alphabetic",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hanging",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ideographic",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "mathematical",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "path",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: SVGSVGElement | null) => void) | RefObject<SVGSVGElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "SVGAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<SVGSVGElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<SVGSVGElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<SVGSVGElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<SVGSVGElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<SVGSVGElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<SVGSVGElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<SVGSVGElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<SVGSVGElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<SVGSVGElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<SVGSVGElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<SVGSVGElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<SVGSVGElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<SVGSVGElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<SVGSVGElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<SVGSVGElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<SVGSVGElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<SVGSVGElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<SVGSVGElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<SVGSVGElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<SVGSVGElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<SVGSVGElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<SVGSVGElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<SVGSVGElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<SVGSVGElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "href",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "media",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "target",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "type",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "crossOrigin",
      "parent": "SVGAttributes",
      "type": "\\"\\" | \\"anonymous\\" | \\"use-credentials\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "max",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "min",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "name",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "values",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "method",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accentHeight",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accumulate",
      "parent": "SVGAttributes",
      "type": "\\"none\\" | \\"sum\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "additive",
      "parent": "SVGAttributes",
      "type": "\\"sum\\" | \\"replace\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "allowReorder",
      "parent": "SVGAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "amplitude",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "arabicForm",
      "parent": "SVGAttributes",
      "type": "\\"initial\\" | \\"medial\\" | \\"terminal\\" | \\"isolated\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ascent",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "attributeName",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "attributeType",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoReverse",
      "parent": "SVGAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "azimuth",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "baseFrequency",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "baseProfile",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "bbox",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "begin",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "bias",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "by",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "calcMode",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "capHeight",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "clipPathUnits",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "colorInterpolationFilters",
      "parent": "SVGAttributes",
      "type": "\\"inherit\\" | \\"auto\\" | \\"linearRGB\\" | \\"sRGB\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "colorProfile",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentScriptType",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentStyleType",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "cx",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "cy",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "d",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "decelerate",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "descent",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "diffuseConstant",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "divisor",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dur",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dx",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dy",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "edgeMode",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "elevation",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "enableBackground",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "exponent",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "externalResourcesRequired",
      "parent": "SVGAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "filterRes",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "filterUnits",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "focusable",
      "parent": "SVGAttributes",
      "type": "boolean | \\"auto\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "format",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "from",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "fx",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "fy",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "g1",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "g2",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "glyphName",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "glyphOrientationHorizontal",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "glyphRef",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "gradientTransform",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "gradientUnits",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "horizAdvX",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "horizOriginX",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "in2",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "in",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "intercept",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "k1",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "k2",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "k3",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "k4",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "k",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "kernelMatrix",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "kernelUnitLength",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "kerning",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "keyPoints",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "keySplines",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "keyTimes",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lengthAdjust",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "limitingConeAngle",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "markerHeight",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "markerUnits",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "markerWidth",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "maskContentUnits",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "maskUnits",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "mode",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "numOctaves",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "operator",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "orient",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "orientation",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "origin",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "overlinePosition",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "overlineThickness",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "panose1",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "pathLength",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "patternContentUnits",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "patternTransform",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "patternUnits",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "points",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "pointsAtX",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "pointsAtY",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "pointsAtZ",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "preserveAlpha",
      "parent": "SVGAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "preserveAspectRatio",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "primitiveUnits",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "r",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radius",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "refX",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "refY",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "renderingIntent",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "repeatCount",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "repeatDur",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "requiredExtensions",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "requiredFeatures",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "restart",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "result",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "rx",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ry",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "seed",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slope",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spacing",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "specularConstant",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "specularExponent",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "speed",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spreadMethod",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "startOffset",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "stdDeviation",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "stemh",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "stemv",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "stitchTiles",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "strikethroughPosition",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "strikethroughThickness",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "surfaceScale",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "systemLanguage",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tableValues",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "targetX",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "targetY",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "textLength",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "to",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "u1",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "u2",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "underlinePosition",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "underlineThickness",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unicode",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unicodeRange",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unitsPerEm",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vAlphabetic",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "version",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vertAdvY",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vertOriginX",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vertOriginY",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vHanging",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vIdeographic",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "viewBox",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "viewTarget",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vMathematical",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "widths",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "x1",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "x2",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "xChannelSelector",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "xHeight",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "xlinkActuate",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "xlinkArcrole",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "xlinkHref",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "xlinkRole",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "xlinkShow",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "xlinkTitle",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "xlinkType",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "xmlBase",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "xmlLang",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "xmlns",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "xmlnsXlink",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "xmlSpace",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "y1",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "y2",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "yChannelSelector",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "z",
      "parent": "SVGAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "zoomAndPan",
      "parent": "SVGAttributes",
      "type": "string | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from SvgIcon component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": false,
      "name": "icon",
      "parent": undefined,
      "type": "((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)> | null) | (new (props: any) => Component<any, any, any>) | ReactElement<...>",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "iconProps",
      "parent": undefined,
      "type": "SVGProps<SVGSVGElement> | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLDivElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLDivElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from Tab component 1`] = `
Object {
  "properties": Array [],
}
`;

exports[`extracting type information extracts information from Tabs component 1`] = `
Object {
  "properties": Array [],
}
`;

exports[`extracting type information extracts information from Text component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLSpanElement | null) => void) | RefObject<HTMLSpanElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLSpanElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLSpanElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLSpanElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLSpanElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLSpanElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLSpanElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLSpanElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLSpanElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLSpanElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLSpanElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLSpanElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLSpanElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLSpanElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLSpanElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLSpanElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLSpanElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLSpanElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLSpanElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLSpanElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLSpanElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLSpanElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLSpanElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLSpanElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLSpanElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from TextArea component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "wrap",
      "parent": "TextareaHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "form",
      "parent": "TextareaHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLTextAreaElement | null) => void) | RefObject<HTMLTextAreaElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "TextareaHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "TextareaHTMLAttributes",
      "type": "((event: ChangeEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTextAreaElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTextAreaElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTextAreaElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTextAreaElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTextAreaElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTextAreaElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTextAreaElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTextAreaElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTextAreaElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTextAreaElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTextAreaElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTextAreaElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTextAreaElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTextAreaElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTextAreaElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTextAreaElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTextAreaElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTextAreaElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTextAreaElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLTextAreaElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLTextAreaElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLTextAreaElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLTextAreaElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLTextAreaElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "value",
      "parent": "TextareaHTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoFocus",
      "parent": "TextareaHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoComplete",
      "parent": "TextareaHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "maxLength",
      "parent": "TextareaHTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "minLength",
      "parent": "TextareaHTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "name",
      "parent": "TextareaHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "readOnly",
      "parent": "TextareaHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "required",
      "parent": "TextareaHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "cols",
      "parent": "TextareaHTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dirName",
      "parent": "TextareaHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "rows",
      "parent": "TextareaHTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "disabled",
      "parent": undefined,
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "invalid",
      "parent": undefined,
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoResize",
      "parent": "TextAreaProps",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "baseProps",
      "parent": "TextAreaProps",
      "type": "(Pick<ClassAttributes<HTMLDivElement> & HTMLAttributes<HTMLDivElement> & StyleProps, \\"color\\" | ... 258 more ... | \\"$$variants\\"> & StyleProps) | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from TextInput component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "baseProps",
      "parent": "TextInputProps",
      "type": "(Pick<ClassAttributes<HTMLDivElement> & HTMLAttributes<HTMLDivElement> & StyleProps, \\"color\\" | ... 258 more ... | \\"$$variants\\"> & { ...; } & { ...; } & StyleProps) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "invalid",
      "parent": "TextInputProps",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "TextInputProps",
      "type": "ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)> | null) | (new (props: any) => Component<any, any, any>)> | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefixProps",
      "parent": "TextInputProps",
      "type": "(Pick<ClassAttributes<HTMLDivElement> & HTMLAttributes<HTMLDivElement> & StyleProps, \\"color\\" | ... 258 more ... | \\"$$variants\\"> & StyleProps) | undefined",
    },
    Object {
      "documentation": "Elements included between prefix and input",
      "isOptional": true,
      "name": "prefixExtra",
      "parent": "TextInputProps",
      "type": "ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)> | null) | (new (props: any) => Component<any, any, any>)> | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suffix",
      "parent": "TextInputProps",
      "type": "ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)> | null) | (new (props: any) => Component<any, any, any>)> | undefined",
    },
    Object {
      "documentation": "Elements included between input and suffix",
      "isOptional": true,
      "name": "suffixExtra",
      "parent": "TextInputProps",
      "type": "ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)> | null) | (new (props: any) => Component<any, any, any>)> | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suffixProps",
      "parent": "TextInputProps",
      "type": "(Pick<ClassAttributes<HTMLDivElement> & HTMLAttributes<HTMLDivElement> & StyleProps, \\"color\\" | ... 258 more ... | \\"$$variants\\"> & StyleProps) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "height",
      "parent": "InputHTMLAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "width",
      "parent": "InputHTMLAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "size",
      "parent": "InputHTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "multiple",
      "parent": "InputHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "disabled",
      "parent": "InputHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "form",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "pattern",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLInputElement | null) => void) | RefObject<HTMLInputElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "InputHTMLAttributes",
      "type": "((event: ChangeEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLInputElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLInputElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "list",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "step",
      "parent": "InputHTMLAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "value",
      "parent": "InputHTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "type",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoFocus",
      "parent": "InputHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accept",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "alt",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoComplete",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "capture",
      "parent": "InputHTMLAttributes",
      "type": "string | boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "checked",
      "parent": "InputHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "crossOrigin",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formAction",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formEncType",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formMethod",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formNoValidate",
      "parent": "InputHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formTarget",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "max",
      "parent": "InputHTMLAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "maxLength",
      "parent": "InputHTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "min",
      "parent": "InputHTMLAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "minLength",
      "parent": "InputHTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "name",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "readOnly",
      "parent": "InputHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "required",
      "parent": "InputHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "src",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from TextSkeleton component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "letters",
      "parent": "TextSkeletonProps",
      "type": "number | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from Toast component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLDivElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLDivElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "duration",
      "parent": undefined,
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDismiss",
      "parent": undefined,
      "type": "(() => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "variant",
      "parent": undefined,
      "type": "\\"default\\" | \\"primary\\" | \\"info\\" | \\"success\\" | \\"danger\\" | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from ToastManager component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ClassAttributes",
      "type": "string | ((instance: HTMLDivElement | null) => void) | RefObject<HTMLDivElement> | null | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLDivElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLDivElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLDivElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLDivElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLDivElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
  ],
}
`;

exports[`extracting type information extracts information from Toggle component 1`] = `
Object {
  "properties": Array [
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hiddenLabel",
      "parent": "ToggleProps",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "invalid",
      "parent": "ToggleProps",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": false,
      "name": "label",
      "parent": "ToggleProps",
      "type": "ReactNode",
    },
    Object {
      "documentation": "Passes props to the label",
      "isOptional": true,
      "name": "labelProps",
      "parent": "ToggleProps",
      "type": "(Pick<ClassAttributes<HTMLLabelElement> & LabelHTMLAttributes<HTMLLabelElement> & StyleProps, \\"color\\" | ... 260 more ... | \\"htmlFor\\"> & { ...; } & StyleProps) | undefined",
    },
    Object {
      "documentation": "Passes props to the label text",
      "isOptional": true,
      "name": "labelTextProps",
      "parent": "ToggleProps",
      "type": "(Pick<ClassAttributes<HTMLSpanElement> & HTMLAttributes<HTMLSpanElement> & StyleProps, \\"color\\" | ... 257 more ... | \\"$$variants\\"> & { ...; } & StyleProps) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "leftContent",
      "parent": "ToggleProps",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "ref",
      "parent": "ToggleProps",
      "type": "RefObject<HTMLInputElement> | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "rightContent",
      "parent": "ToggleProps",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "wrapper",
      "parent": "ToggleProps",
      "type": "ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)> | null) | (new (props: any) => Component<any, any, any>)> | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "color",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "height",
      "parent": "InputHTMLAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "translate",
      "parent": "HTMLAttributes",
      "type": "\\"yes\\" | \\"no\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "width",
      "parent": "InputHTMLAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "hidden",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "size",
      "parent": "InputHTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "style",
      "parent": "HTMLAttributes",
      "type": "CSSProperties | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "multiple",
      "parent": "InputHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "disabled",
      "parent": "InputHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dir",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "form",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "slot",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "title",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "pattern",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "children",
      "parent": "DOMAttributes",
      "type": "ReactNode",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "role",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "key",
      "parent": "Attributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultChecked",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "defaultValue",
      "parent": "HTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressContentEditableWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "suppressHydrationWarning",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accessKey",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "className",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contentEditable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"inherit\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "contextMenu",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "draggable",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "id",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "lang",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "placeholder",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "spellCheck",
      "parent": "HTMLAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "tabIndex",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "radioGroup",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "about",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "datatype",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "inlist",
      "parent": "HTMLAttributes",
      "type": "any",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "prefix",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "property",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "resource",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "typeof",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "vocab",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCapitalize",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoCorrect",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoSave",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemProp",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemScope",
      "parent": "HTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemType",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemID",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "itemRef",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "results",
      "parent": "HTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "security",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "unselectable",
      "parent": "HTMLAttributes",
      "type": "\\"on\\" | \\"off\\" | undefined",
    },
    Object {
      "documentation": "Hints at the type of data that might be entered by the user while editing the element or its contents",
      "isOptional": true,
      "name": "inputMode",
      "parent": "HTMLAttributes",
      "type": "\\"none\\" | \\"text\\" | \\"tel\\" | \\"url\\" | \\"email\\" | \\"numeric\\" | \\"decimal\\" | \\"search\\" | undefined",
    },
    Object {
      "documentation": "Specify that a standard HTML element should behave like a defined custom built-in element",
      "isOptional": true,
      "name": "is",
      "parent": "HTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the currently active element when DOM focus is on a composite widget, textbox, group, or application.",
      "isOptional": true,
      "name": "aria-activedescendant",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether assistive technologies will present all, or only parts of, the changed region based on the change notifications defined by the aria-relevant attribute.",
      "isOptional": true,
      "name": "aria-atomic",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether inputting text could trigger display of one or more predictions of the user's intended value for an input and specifies how predictions would be
presented if they are made.",
      "isOptional": true,
      "name": "aria-autocomplete",
      "parent": "AriaAttributes",
      "type": "\\"both\\" | \\"none\\" | \\"inline\\" | \\"list\\" | undefined",
    },
    Object {
      "documentation": "Indicates an element is being modified and that assistive technologies MAY want to wait until the modifications are complete before exposing them to the user.",
      "isOptional": true,
      "name": "aria-busy",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"checked\\" state of checkboxes, radio buttons, and other widgets.",
      "isOptional": true,
      "name": "aria-checked",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the total number of columns in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's column index or position with respect to the total number of columns within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of columns spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-colspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) whose contents or presence are controlled by the current element.",
      "isOptional": true,
      "name": "aria-controls",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates the element that represents the current item within a container or set of related elements.",
      "isOptional": true,
      "name": "aria-current",
      "parent": "AriaAttributes",
      "type": "boolean | \\"page\\" | \\"false\\" | \\"true\\" | \\"time\\" | \\"step\\" | \\"location\\" | \\"date\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that describes the object.",
      "isOptional": true,
      "name": "aria-describedby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides a detailed, extended description for the object.",
      "isOptional": true,
      "name": "aria-details",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates that the element is perceivable but disabled, so it is not editable or otherwise operable.",
      "isOptional": true,
      "name": "aria-disabled",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what functions can be performed when a dragged object is released on the drop target.",
      "isOptional": true,
      "name": "aria-dropeffect",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"copy\\" | \\"move\\" | \\"link\\" | \\"execute\\" | \\"popup\\" | undefined",
    },
    Object {
      "documentation": "Identifies the element that provides an error message for the object.",
      "isOptional": true,
      "name": "aria-errormessage",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates whether the element, or another grouping element it controls, is currently expanded or collapsed.",
      "isOptional": true,
      "name": "aria-expanded",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Identifies the next element (or elements) in an alternate reading order of content which, at the user's discretion,
allows assistive technology to override the general default of reading in document source order.",
      "isOptional": true,
      "name": "aria-flowto",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Indicates an element's \\"grabbed\\" state in a drag-and-drop operation.",
      "isOptional": true,
      "name": "aria-grabbed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the availability and type of interactive popup element, such as menu or dialog, that can be triggered by an element.",
      "isOptional": true,
      "name": "aria-haspopup",
      "parent": "AriaAttributes",
      "type": "boolean | \\"grid\\" | \\"listbox\\" | \\"menu\\" | \\"false\\" | \\"true\\" | \\"dialog\\" | \\"tree\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element is exposed to an accessibility API.",
      "isOptional": true,
      "name": "aria-hidden",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates the entered value does not conform to the format expected by the application.",
      "isOptional": true,
      "name": "aria-invalid",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | \\"grammar\\" | \\"spelling\\" | undefined",
    },
    Object {
      "documentation": "Indicates keyboard shortcuts that an author has implemented to activate or give focus to an element.",
      "isOptional": true,
      "name": "aria-keyshortcuts",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a string value that labels the current element.",
      "isOptional": true,
      "name": "aria-label",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Identifies the element (or elements) that labels the current element.",
      "isOptional": true,
      "name": "aria-labelledby",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the hierarchical level of an element within a structure.",
      "isOptional": true,
      "name": "aria-level",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates that an element will be updated, and describes the types of updates the user agents, assistive technologies, and user can expect from the live region.",
      "isOptional": true,
      "name": "aria-live",
      "parent": "AriaAttributes",
      "type": "\\"off\\" | \\"assertive\\" | \\"polite\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether an element is modal when displayed.",
      "isOptional": true,
      "name": "aria-modal",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether a text box accepts multiple lines of input or only a single line.",
      "isOptional": true,
      "name": "aria-multiline",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the user may select more than one item from the current selectable descendants.",
      "isOptional": true,
      "name": "aria-multiselectable",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates whether the element's orientation is horizontal, vertical, or unknown/ambiguous.",
      "isOptional": true,
      "name": "aria-orientation",
      "parent": "AriaAttributes",
      "type": "\\"horizontal\\" | \\"vertical\\" | undefined",
    },
    Object {
      "documentation": "Identifies an element (or elements) in order to define a visual, functional, or contextual parent/child relationship
between DOM elements where the DOM hierarchy cannot be used to represent the relationship.",
      "isOptional": true,
      "name": "aria-owns",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines a short hint (a word or short phrase) intended to aid the user with data entry when the control has no value.
A hint could be a sample value or a brief description of the expected format.",
      "isOptional": true,
      "name": "aria-placeholder",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines an element's number or position in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-posinset",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"pressed\\" state of toggle buttons.",
      "isOptional": true,
      "name": "aria-pressed",
      "parent": "AriaAttributes",
      "type": "boolean | \\"mixed\\" | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates that the element is not editable, but is otherwise operable.",
      "isOptional": true,
      "name": "aria-readonly",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Indicates what notifications the user agent will trigger when the accessibility tree within a live region is modified.",
      "isOptional": true,
      "name": "aria-relevant",
      "parent": "AriaAttributes",
      "type": "\\"all\\" | \\"text\\" | \\"additions\\" | \\"additions text\\" | \\"removals\\" | undefined",
    },
    Object {
      "documentation": "Indicates that user input is required on the element before a form may be submitted.",
      "isOptional": true,
      "name": "aria-required",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines a human-readable, author-localized description for the role of an element.",
      "isOptional": true,
      "name": "aria-roledescription",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "Defines the total number of rows in a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowcount",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines an element's row index or position with respect to the total number of rows within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowindex",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the number of rows spanned by a cell or gridcell within a table, grid, or treegrid.",
      "isOptional": true,
      "name": "aria-rowspan",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates the current \\"selected\\" state of various widgets.",
      "isOptional": true,
      "name": "aria-selected",
      "parent": "AriaAttributes",
      "type": "boolean | \\"false\\" | \\"true\\" | undefined",
    },
    Object {
      "documentation": "Defines the number of items in the current set of listitems or treeitems. Not required if all elements in the set are present in the DOM.",
      "isOptional": true,
      "name": "aria-setsize",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Indicates if items in a table or grid are sorted in ascending or descending order.",
      "isOptional": true,
      "name": "aria-sort",
      "parent": "AriaAttributes",
      "type": "\\"none\\" | \\"ascending\\" | \\"descending\\" | \\"other\\" | undefined",
    },
    Object {
      "documentation": "Defines the maximum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemax",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the minimum allowed value for a range widget.",
      "isOptional": true,
      "name": "aria-valuemin",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the current value for a range widget.",
      "isOptional": true,
      "name": "aria-valuenow",
      "parent": "AriaAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "Defines the human readable text alternative of aria-valuenow for a range widget.",
      "isOptional": true,
      "name": "aria-valuetext",
      "parent": "AriaAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "dangerouslySetInnerHTML",
      "parent": "DOMAttributes",
      "type": "{ __html: string; } | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopy",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCopyCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCut",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCutCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPaste",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPasteCapture",
      "parent": "DOMAttributes",
      "type": "((event: ClipboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEnd",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStart",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdate",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCompositionUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: CompositionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocus",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onFocusCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlur",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBlurCapture",
      "parent": "DOMAttributes",
      "type": "((event: FocusEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChange",
      "parent": "InputHTMLAttributes",
      "type": "((event: ChangeEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onBeforeInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInput",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInputCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onReset",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onResetCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmit",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSubmitCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalid",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onInvalidCapture",
      "parent": "DOMAttributes",
      "type": "((event: FormEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoad",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onError",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onErrorCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDown",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPress",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyPressCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUp",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onKeyUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: KeyboardEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbort",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAbortCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThrough",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onCanPlayThroughCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDurationChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptied",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEmptiedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncrypted",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEncryptedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEnded",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onEndedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedData",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedDataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadata",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadedMetadataCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStart",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLoadStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPause",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPauseCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlay",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlaying",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPlayingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgress",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onProgressCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onRateChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeked",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekedCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeeking",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSeekingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalled",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onStalledCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspend",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSuspendCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdate",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTimeUpdateCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChange",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onVolumeChangeCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaiting",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWaitingCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAuxClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenu",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onContextMenuCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClick",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDoubleClickCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrag",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnd",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnter",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExit",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragExitCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeave",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOver",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStart",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDragStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDrop",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onDropCapture",
      "parent": "DOMAttributes",
      "type": "((event: DragEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDown",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseEnter",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseLeave",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMove",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOut",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOver",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUp",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onMouseUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: MouseEvent<HTMLInputElement, MouseEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelect",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onSelectCapture",
      "parent": "DOMAttributes",
      "type": "((event: SyntheticEvent<HTMLInputElement, Event>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancel",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEnd",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMove",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStart",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTouchStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: TouchEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDown",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerDownCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMove",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerMoveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUp",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerUpCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancel",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerCancelCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnter",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerEnterCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeave",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerLeaveCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOver",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOverCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOut",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onPointerOutCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onGotPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onLostPointerCaptureCapture",
      "parent": "DOMAttributes",
      "type": "((event: PointerEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScroll",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLInputElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onScrollCapture",
      "parent": "DOMAttributes",
      "type": "((event: UIEvent<HTMLInputElement, UIEvent>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheel",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onWheelCapture",
      "parent": "DOMAttributes",
      "type": "((event: WheelEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStart",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationStartCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEnd",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIteration",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onAnimationIterationCapture",
      "parent": "DOMAttributes",
      "type": "((event: AnimationEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEnd",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "onTransitionEndCapture",
      "parent": "DOMAttributes",
      "type": "((event: TransitionEvent<HTMLInputElement>) => void) | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "css",
      "parent": "DOMAttributes",
      "type": "InterpolationWithTheme<any>",
    },
    Object {
      "documentation": "Style overrides",
      "isOptional": true,
      "name": "styles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet | undefined",
    },
    Object {
      "documentation": "Parent styles are array of all stylesheets that should be applied from parents",
      "isOptional": true,
      "name": "parentStyles",
      "parent": "StyleProps",
      "type": "ResponsiveStyleSheet[] | undefined",
    },
    Object {
      "documentation": "All variant processing functions",
      "isOptional": true,
      "name": "$$variants",
      "parent": "StyleProps",
      "type": "OmitPropsSetting[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "list",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "step",
      "parent": "InputHTMLAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "value",
      "parent": "InputHTMLAttributes",
      "type": "string | number | string[] | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "type",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoFocus",
      "parent": "InputHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "accept",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "alt",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "autoComplete",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "capture",
      "parent": "InputHTMLAttributes",
      "type": "string | boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "checked",
      "parent": "InputHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "crossOrigin",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formAction",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formEncType",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formMethod",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formNoValidate",
      "parent": "InputHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "formTarget",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "max",
      "parent": "InputHTMLAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "maxLength",
      "parent": "InputHTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "min",
      "parent": "InputHTMLAttributes",
      "type": "string | number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "minLength",
      "parent": "InputHTMLAttributes",
      "type": "number | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "name",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "readOnly",
      "parent": "InputHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "required",
      "parent": "InputHTMLAttributes",
      "type": "boolean | undefined",
    },
    Object {
      "documentation": "",
      "isOptional": true,
      "name": "src",
      "parent": "InputHTMLAttributes",
      "type": "string | undefined",
    },
  ],
}
`;
